<div class="cont w-full overflow-x-hidden">
  <section class="sticky w-full overflow-x-hidden">
    <div class="img-1 object-cover w-full">
      <img src="./img/feat/goku.jpg" alt="" class="object-cover" />
      <h2 class="text-orange-300 absolute top-1/2 font-dbz text-8xl left-6">
        Goku
      </h2>
    </div>

    <div class="img-2">
      <img src="./img/feat/vegeta.jpg" alt="" />
      <h2 class="text-blue-300 absolute bottom-10 font-dbz text-8xl right-6">
        vegeta
      </h2>
    </div>

    <div class="img-3">
      <img src="./img/feat/broli.jpg" alt="" />
      <h2 class="text-black absolute top-10 font-dbz text-8xl left-6">Broli</h2>
    </div>
  </section>
</div>
<style>
  section {
    width: 100dvw;
    height: 100vh;
    position: relative;
    overflow: hidden; /* Asegura que el contenido no se desborde */
  }

  .sticky {
    position: relative;
    perspective: 1000px; /* Se usa para crear una sensación de profundidad */
  }

  .img-1,
  .img-2,
  .img-3 {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;

    height: 100%;
    overflow-x: hidden; /* Evita que el contenido se desborde */
  }

  img {
    width: 100%;
    height: 100%;
    object-fit: cover; /* Asegura que las imágenes se cubran sin deformarse */
  }

  .img-2 {
    clip-path: polygon(
      40% 25%,
      60% 25%,
      60% 75%,
      40% 75%
    ); /* Mantiene el recorte inicial de img-2 */
  }

  .img-3 {
    clip-path: polygon(50% 25%, 50% 25%, 50% 75%, 50% 75%);
  }

  .img-3 img {
    transform-origin: top right;
    transform: scale(3);
  }
</style>
<script>
  import gsap from "gsap";
  import ScrollTrigger from "gsap/ScrollTrigger";
  import Lenis from "lenis";
  document.addEventListener("DOMContentLoaded", () => {
    gsap.registerPlugin(ScrollTrigger);
    const stickySection = document.querySelector(".sticky");
    const totalStickyHeight = window.innerHeight * 4;

    // lenis smooth scroll
    const lenis = new Lenis();
    lenis.on("scroll", ScrollTrigger.update);
    gsap.ticker.add((time) => {
      lenis.raf(time * 1000);
    });
    gsap.ticker.lagSmoothing(0);

    // helper func: split text into letters
    // const introParagraphs = document.querySelectorAll(".intro-col p");
    // introParagraphs.forEach((paragraph) => {
    //   const text: string = paragraph.textContent || ""; // Asegúrate de que text sea un string
    //   paragraph.innerHTML = text
    //     .split(/(\s+)/)
    //     .map((part) => {
    //       if (part.trim() === "") {
    //         return part;
    //       } else {
    //         return part
    //           .split("")
    //           .map(
    //             (char) =>
    //               `<span style="opacity: 0; display: inline-block;">${char}</span>`
    //           )
    //           .join("");
    //       }
    //     })
    //     .join("");
    // });

    // flicker animation: intro text
    // function flickerAnimation(targets, toOpacity) {
    //   gsap.to(targets, {
    //     opacity: toOpacity,
    //     duration: 0.05,
    //     stagger: {
    //       amount: 0.3,
    //       from: "random",
    //     },
    //   });
    // }

    ScrollTrigger.create({
      trigger: stickySection,
      start: "top top",
      end: () => `${window.innerHeight * 3}`,
      // onEnter: () => flickerAnimation(".intro-col p span", 1),
      // onLeave: () => flickerAnimation(".intro-col p span", 0),
      // onEnterBack: () => flickerAnimation(".intro-col p span", 1),
      // onLeaveBack: () => flickerAnimation(".intro-col p span", 0),
    });

    // scrolltrigger animations
    // pin the sticky section
    ScrollTrigger.create({
      trigger: stickySection,
      start: "top top",
      end: () => `+=${totalStickyHeight}`,
      pin: true,
      pinSpacing: true,
    });

    // scale img-1
    gsap.to(".img-1 img", {
      // scale: 1.125,
      ease: "none",
      scrollTrigger: {
        trigger: stickySection,
        start: "top top",
        end: () => `+=${window.innerHeight}`,
        scrub: true,
      },
    });

    // animate img-2's clip-path
    gsap.to(".img-2", {
      clipPath: "polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)",
      ease: "none",
      scrollTrigger: {
        trigger: stickySection,
        start: "top top",
        end: () => `+=${window.innerHeight}`,
        scrub: true,
        onUpdate: (self) => {
          const progress = self.progress;
          gsap.set(".img-2", {
            clipPath: `polygon(
          ${gsap.utils.interpolate(40, 0, progress)}% ${gsap.utils.interpolate(
            25,
            0,
            progress
          )}%,
          ${gsap.utils.interpolate(60, 100, progress)}% ${gsap.utils.interpolate(
            25,
            0,
            progress
          )}%,
          ${gsap.utils.interpolate(60, 100, progress)}% ${gsap.utils.interpolate(
            75,
            100,
            progress
          )}%,
          ${gsap.utils.interpolate(40, 0, progress)}% ${gsap.utils.interpolate(
            75,
            100,
            progress
          )}%
        )`,
          });
        },
      },
    });

    // scale img-2
    gsap.to(".img-2 img", {
      // scale: 1.125,
      ease: "none",
      scrollTrigger: {
        trigger: stickySection,
        start: "top top",
        end: () => `+=${window.innerHeight}`,
        scrub: true,
      },
    });

    // animate img-3's clip-path
    gsap.to(".img-3", {
      clipPath: "polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)",
      ease: "none",
      scrollTrigger: {
        trigger: stickySection,
        start: () => `${window.innerHeight * 4.5}`,
        end: () => `${window.innerHeight * 5}`,
        scrub: true,
        onUpdate: (self) => {
          const progress = self.progress;
          gsap.set(".img-3", {
            clipPath: `polygon(
            ${gsap.utils.interpolate(50, 0, progress)}% ${gsap.utils.interpolate(
              50,
              0,
              progress
            )}%,
            ${gsap.utils.interpolate(
              50,
              100,
              progress
            )}% ${gsap.utils.interpolate(50, 0, progress)}%,
            ${gsap.utils.interpolate(
              50,
              100,
              progress
            )}% ${gsap.utils.interpolate(50, 100, progress)}%,
            ${gsap.utils.interpolate(50, 0, progress)}% ${gsap.utils.interpolate(
              50,
              100,
              progress
            )}%
          )`,
          });
        },
      },
    });

    // continue img-2's scale
    gsap.fromTo(
      ".img-2 img",
      {
        scale: 1.125,
      },
      {
        scale: 1.25,
        ease: "none",
        scrollTrigger: {
          trigger: stickySection,
          start: () => `${window.innerHeight * 3}`,
          end: () => `${window.innerHeight * 4}`,
          scrub: true,
        },
      }
    );

    // scale img-3
    gsap.to(".img-3 img", {
      scale: 2.9,
      ease: "none",
      scrollTrigger: {
        trigger: stickySection,
        start: () => `${window.innerHeight * 2}`,
        end: () => `${window.innerHeight * 2}`,
        scrub: true,
      },
    });

    // reset img-3's scale (zoom out)
    gsap.fromTo(
      ".img-3 img",
      { scale: 2.9 },
      {
        scale: 1.01,
        ease: "none",
        scrollTrigger: {
          trigger: stickySection,
          start: () => `${window.innerHeight * 4}`,
          end: () => `${window.innerHeight * 6}`,
          scrub: true,
        },
      }
    );

    // final copy reveal
    let tl = gsap.timeline({
      scrollTrigger: {
        trigger: stickySection,
        start: () => `${window.innerHeight * 4.5}`,
        end: () => `${window.innerHeight * 5.5}`,
        scrub: true,
        toggleActions: "play reverse play reverse",
      },
    });

    tl.to(".copy", {
      display: "block",
      rotateY: 0,
      scale: 1,
      duration: 1,
    });
  });
</script>
